@startuml Use Case
title Use Case Diagram

skinParam actorStyle awesome

:User: --> (Call Elevator)
:User: --> (Select Floor)
:User: --> (Keep door open via blocking)

@enduml

@startuml Class Diagram
Title Class Diagram

class ElevatorManager
{
}

class Elevator
{
    {method} + GetFloorNumber() : int
    {method} + Open()
}

class ElevatorShaft
{
    {method} + MoveToFloor(int floor)
    {method} + Raise()
    {method} + Lower()
}

class FloorSelectionPanel
{
    {method} + SelectFloor(int floor)
    {method} - RaiseFloorSelectionEvent()
}

class CallElevatorPanel
{
    {method} + CallElevator()
    {method} - RaiseCallElevatorEvent()
}

class Door
{
    {method} + Open()
    {method} + Close()
}

class Display
{
    {method} + UpdateFloor(int floor)
    {method} + UpdateDirection(ElevatorDirection direction)
    {method} + Refresh()
}

interface IDoorDisplay
{
    {method} + UpdateFloor(int floor)
    {method} + UpdateDirection(ElevatorDirection direction)
    {method} + Refresh()
}

class TensionManager
{
}

interface ITensionSensor
{
    {method} + Reset()
    {method} - RaiseTensionEvent()
}

interface IPressureSensor
{
    {method} - RaisePressureEvent()
}

interface IOpticalSensor
{
    {method} - RaiseOpticalEvent()
}

interface IButton
{
    {method} - RaiseButtonEvent()
}

class Button
{
}

interface IClamp
{
    {Method} + Close()
    {Method} + Open()
}

class Floor
{
    {field} - int FloorNumber
    {method} + Floor(int floorNumber)
    {method} + GetFloorNumber() : int
}

interface ISpeaker
{
    {Method} + PlaySound()
}

enum ElevatorDirection
{
    UP
    DOWN
    IDLE
}

ElevatorManager --> ElevatorShaft : 1..*
ElevatorManager --> Floor : 1..*

ElevatorShaft --> Elevator
ElevatorShaft --> TensionManager

Floor --> CallElevatorPanel
Floor --> IDoorDisplay

Elevator --> IDoorDisplay
Elevator --> ISpeaker
Speaker -up-|> ISpeaker
Elevator -----> FloorSelectionPanel

FloorSelectionPanel -> IButton
CallElevatorPanel --> IButton

IDoorDisplay --> Display
IDoorDisplay --> Door

Door --> IPressureSensor
Door --> IOpticalSensor
OpticalSensor -|> IOpticalSensor
PressureSensor -|> IPressureSensor

Button -up-|>  IButton

TensionManager --> IClamp
TensionManager --> ITensionSensor
TensionSensor -up-|> ITensionSensor
Clamp -up-|> IClamp

@enduml